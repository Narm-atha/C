#include <iostream>
#include <vector>

using namespace std;

// Student Class
class Student {
private:
    int id;
    string name;
    int age;
    string course;

public:
    // Constructor
    Student(int _id, string _name, int _age, string _course) {
        id = _id;
        name = _name;
        age = _age;
        course = _course;
    }

    // Display Student Details
    void displayInfo() {
        cout << "ID: " << id << ", Name: " << name << ", Age: " << age << ", Course: " << course << endl;
    }

    // Get Student ID
    int getId() {
        return id;
    }
};

// Student Management System Class
class StudentSystem {
private:
    vector<Student> students;

public:
    // Add a Student
    void addStudent(int id, string name, int age, string course) {
        Student newStudent(id, name, age, course);
        students.push_back(newStudent);
        cout << "Student added successfully!\n";
    }

    // Display All Students
    void displayAllStudents() {
        if (students.empty()) {
            cout << "No students found!\n";
            return;
        }
        cout << "\nStudent List:\n";
        for (const auto &student : students) {
            student.displayInfo();
        }
    }

    // Search Student by ID
    void searchStudent(int id) {
        for (const auto &student : students) {
            if (student.getId() == id) {
                cout << "\nStudent Found:\n";
                student.displayInfo();
                return;
            }
        }
        cout << "Student with ID " << id << " not found!\n";
    }
};

// Main Function
int main() {
    StudentSystem system;
    int choice, id, age;
    string name, course;

    while (true) {
        cout << "\nStudent Information System\n";
        cout << "1. Add Student\n2. Display All Students\n3. Search Student by ID\n4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter ID: ";
                cin >> id;
                cout << "Enter Name: ";
                cin.ignore();
                getline(cin, name);
                cout << "Enter Age: ";
                cin >> age;
                cout << "Enter Course: ";
                cin.ignore();
                getline(cin, course);
                system.addStudent(id, name, age, course);
                break;
            case 2:
                system.displayAllStudents();
                break;
            case 3:
                cout << "Enter Student ID to Search: ";
                cin >> id;
                system.searchStudent(id);
                break;
            case 4:
                cout << "Exiting program...\n";
                return 0;
            default:
                cout << "Invalid choice! Try again.\n";
        }
    }
}
